// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dictionary.proto

#include "dictionary.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

PROTOBUF_CONSTEXPR WordRequest::WordRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.word_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WordRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WordRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WordRequestDefaultTypeInternal() {}
  union {
    WordRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WordRequestDefaultTypeInternal _WordRequest_default_instance_;
PROTOBUF_CONSTEXPR WordResponse::WordResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct WordResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR WordResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~WordResponseDefaultTypeInternal() {}
  union {
    WordResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 WordResponseDefaultTypeInternal _WordResponse_default_instance_;
PROTOBUF_CONSTEXPR DictionaryResponse_DictionaryEntry_DoNotUse::DictionaryResponse_DictionaryEntry_DoNotUse(
    ::_pbi::ConstantInitialized) {}
struct DictionaryResponse_DictionaryEntry_DoNotUseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DictionaryResponse_DictionaryEntry_DoNotUseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DictionaryResponse_DictionaryEntry_DoNotUseDefaultTypeInternal() {}
  union {
    DictionaryResponse_DictionaryEntry_DoNotUse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DictionaryResponse_DictionaryEntry_DoNotUseDefaultTypeInternal _DictionaryResponse_DictionaryEntry_DoNotUse_default_instance_;
PROTOBUF_CONSTEXPR DictionaryResponse::DictionaryResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dictionary_)*/{::_pbi::ConstantInitialized()}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DictionaryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DictionaryResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DictionaryResponseDefaultTypeInternal() {}
  union {
    DictionaryResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DictionaryResponseDefaultTypeInternal _DictionaryResponse_default_instance_;
PROTOBUF_CONSTEXPR Empty::Empty(
    ::_pbi::ConstantInitialized) {}
struct EmptyDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EmptyDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~EmptyDefaultTypeInternal() {}
  union {
    Empty _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EmptyDefaultTypeInternal _Empty_default_instance_;
static ::_pb::Metadata file_level_metadata_dictionary_2eproto[5];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_dictionary_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_dictionary_2eproto = nullptr;

const uint32_t TableStruct_dictionary_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::WordRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::WordRequest, _impl_.word_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::WordResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::WordResponse, _impl_.message_),
  PROTOBUF_FIELD_OFFSET(::DictionaryResponse_DictionaryEntry_DoNotUse, _has_bits_),
  PROTOBUF_FIELD_OFFSET(::DictionaryResponse_DictionaryEntry_DoNotUse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DictionaryResponse_DictionaryEntry_DoNotUse, key_),
  PROTOBUF_FIELD_OFFSET(::DictionaryResponse_DictionaryEntry_DoNotUse, value_),
  0,
  1,
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::DictionaryResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::DictionaryResponse, _impl_.dictionary_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::Empty, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::WordRequest)},
  { 7, -1, -1, sizeof(::WordResponse)},
  { 14, 22, -1, sizeof(::DictionaryResponse_DictionaryEntry_DoNotUse)},
  { 24, -1, -1, sizeof(::DictionaryResponse)},
  { 31, -1, -1, sizeof(::Empty)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::_WordRequest_default_instance_._instance,
  &::_WordResponse_default_instance_._instance,
  &::_DictionaryResponse_DictionaryEntry_DoNotUse_default_instance_._instance,
  &::_DictionaryResponse_default_instance_._instance,
  &::_Empty_default_instance_._instance,
};

const char descriptor_table_protodef_dictionary_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\020dictionary.proto\"\033\n\013WordRequest\022\014\n\004wor"
  "d\030\001 \001(\t\"\037\n\014WordResponse\022\017\n\007message\030\001 \001(\t"
  "\"\200\001\n\022DictionaryResponse\0227\n\ndictionary\030\001 "
  "\003(\0132#.DictionaryResponse.DictionaryEntry"
  "\0321\n\017DictionaryEntry\022\013\n\003key\030\001 \001(\t\022\r\n\005valu"
  "e\030\002 \001(\005:\0028\001\"\007\n\005Empty2e\n\nDictionary\022)\n\nUp"
  "dateWord\022\014.WordRequest\032\r.WordResponse\022,\n"
  "\rGetDictionary\022\006.Empty\032\023.DictionaryRespo"
  "nseb\006proto3"
  ;
static ::_pbi::once_flag descriptor_table_dictionary_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_dictionary_2eproto = {
    false, false, 331, descriptor_table_protodef_dictionary_2eproto,
    "dictionary.proto",
    &descriptor_table_dictionary_2eproto_once, nullptr, 0, 5,
    schemas, file_default_instances, TableStruct_dictionary_2eproto::offsets,
    file_level_metadata_dictionary_2eproto, file_level_enum_descriptors_dictionary_2eproto,
    file_level_service_descriptors_dictionary_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_dictionary_2eproto_getter() {
  return &descriptor_table_dictionary_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_dictionary_2eproto(&descriptor_table_dictionary_2eproto);

// ===================================================================

class WordRequest::_Internal {
 public:
};

WordRequest::WordRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:WordRequest)
}
WordRequest::WordRequest(const WordRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WordRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.word_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.word_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.word_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_word().empty()) {
    _this->_impl_.word_.Set(from._internal_word(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:WordRequest)
}

inline void WordRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.word_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.word_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.word_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WordRequest::~WordRequest() {
  // @@protoc_insertion_point(destructor:WordRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WordRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.word_.Destroy();
}

void WordRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WordRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:WordRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.word_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WordRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string word = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_word();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "WordRequest.word"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WordRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WordRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string word = 1;
  if (!this->_internal_word().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_word().data(), static_cast<int>(this->_internal_word().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WordRequest.word");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_word(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WordRequest)
  return target;
}

size_t WordRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WordRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string word = 1;
  if (!this->_internal_word().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_word());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WordRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WordRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WordRequest::GetClassData() const { return &_class_data_; }


void WordRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WordRequest*>(&to_msg);
  auto& from = static_cast<const WordRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:WordRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_word().empty()) {
    _this->_internal_set_word(from._internal_word());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WordRequest::CopyFrom(const WordRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WordRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WordRequest::IsInitialized() const {
  return true;
}

void WordRequest::InternalSwap(WordRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.word_, lhs_arena,
      &other->_impl_.word_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata WordRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dictionary_2eproto_getter, &descriptor_table_dictionary_2eproto_once,
      file_level_metadata_dictionary_2eproto[0]);
}

// ===================================================================

class WordResponse::_Internal {
 public:
};

WordResponse::WordResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:WordResponse)
}
WordResponse::WordResponse(const WordResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  WordResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:WordResponse)
}

inline void WordResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.message_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

WordResponse::~WordResponse() {
  // @@protoc_insertion_point(destructor:WordResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void WordResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.message_.Destroy();
}

void WordResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void WordResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:WordResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.message_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* WordResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string message = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "WordResponse.message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* WordResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:WordResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "WordResponse.message");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WordResponse)
  return target;
}

size_t WordResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WordResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string message = 1;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData WordResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    WordResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*WordResponse::GetClassData() const { return &_class_data_; }


void WordResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<WordResponse*>(&to_msg);
  auto& from = static_cast<const WordResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:WordResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void WordResponse::CopyFrom(const WordResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WordResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WordResponse::IsInitialized() const {
  return true;
}

void WordResponse::InternalSwap(WordResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata WordResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dictionary_2eproto_getter, &descriptor_table_dictionary_2eproto_once,
      file_level_metadata_dictionary_2eproto[1]);
}

// ===================================================================

DictionaryResponse_DictionaryEntry_DoNotUse::DictionaryResponse_DictionaryEntry_DoNotUse() {}
DictionaryResponse_DictionaryEntry_DoNotUse::DictionaryResponse_DictionaryEntry_DoNotUse(::PROTOBUF_NAMESPACE_ID::Arena* arena)
    : SuperType(arena) {}
void DictionaryResponse_DictionaryEntry_DoNotUse::MergeFrom(const DictionaryResponse_DictionaryEntry_DoNotUse& other) {
  MergeFromInternal(other);
}
::PROTOBUF_NAMESPACE_ID::Metadata DictionaryResponse_DictionaryEntry_DoNotUse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dictionary_2eproto_getter, &descriptor_table_dictionary_2eproto_once,
      file_level_metadata_dictionary_2eproto[2]);
}

// ===================================================================

class DictionaryResponse::_Internal {
 public:
};

DictionaryResponse::DictionaryResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  if (arena != nullptr && !is_message_owned) {
    arena->OwnCustomDestructor(this, &DictionaryResponse::ArenaDtor);
  }
  // @@protoc_insertion_point(arena_constructor:DictionaryResponse)
}
DictionaryResponse::DictionaryResponse(const DictionaryResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DictionaryResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      /*decltype(_impl_.dictionary_)*/{}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _this->_impl_.dictionary_.MergeFrom(from._impl_.dictionary_);
  // @@protoc_insertion_point(copy_constructor:DictionaryResponse)
}

inline void DictionaryResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      /*decltype(_impl_.dictionary_)*/{::_pbi::ArenaInitialized(), arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DictionaryResponse::~DictionaryResponse() {
  // @@protoc_insertion_point(destructor:DictionaryResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    ArenaDtor(this);
    return;
  }
  SharedDtor();
}

inline void DictionaryResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dictionary_.Destruct();
  _impl_.dictionary_.~MapField();
}

void DictionaryResponse::ArenaDtor(void* object) {
  DictionaryResponse* _this = reinterpret_cast< DictionaryResponse* >(object);
  _this->_impl_.dictionary_.Destruct();
}
void DictionaryResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DictionaryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:DictionaryResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dictionary_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DictionaryResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // map<string, int32> dictionary = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(&_impl_.dictionary_, ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DictionaryResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:DictionaryResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // map<string, int32> dictionary = 1;
  if (!this->_internal_dictionary().empty()) {
    using MapType = ::_pb::Map<std::string, int32_t>;
    using WireHelper = DictionaryResponse_DictionaryEntry_DoNotUse::Funcs;
    const auto& map_field = this->_internal_dictionary();
    auto check_utf8 = [](const MapType::value_type& entry) {
      (void)entry;
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
        entry.first.data(), static_cast<int>(entry.first.length()),
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
        "DictionaryResponse.DictionaryEntry.key");
    };

    if (stream->IsSerializationDeterministic() && map_field.size() > 1) {
      for (const auto& entry : ::_pbi::MapSorterPtr<MapType>(map_field)) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    } else {
      for (const auto& entry : map_field) {
        target = WireHelper::InternalSerialize(1, entry.first, entry.second, target, stream);
        check_utf8(entry);
      }
    }
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:DictionaryResponse)
  return target;
}

size_t DictionaryResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:DictionaryResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // map<string, int32> dictionary = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(this->_internal_dictionary_size());
  for (::PROTOBUF_NAMESPACE_ID::Map< std::string, int32_t >::const_iterator
      it = this->_internal_dictionary().begin();
      it != this->_internal_dictionary().end(); ++it) {
    total_size += DictionaryResponse_DictionaryEntry_DoNotUse::Funcs::ByteSizeLong(it->first, it->second);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DictionaryResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DictionaryResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DictionaryResponse::GetClassData() const { return &_class_data_; }


void DictionaryResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DictionaryResponse*>(&to_msg);
  auto& from = static_cast<const DictionaryResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:DictionaryResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.dictionary_.MergeFrom(from._impl_.dictionary_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DictionaryResponse::CopyFrom(const DictionaryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:DictionaryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DictionaryResponse::IsInitialized() const {
  return true;
}

void DictionaryResponse::InternalSwap(DictionaryResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dictionary_.InternalSwap(&other->_impl_.dictionary_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DictionaryResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dictionary_2eproto_getter, &descriptor_table_dictionary_2eproto_once,
      file_level_metadata_dictionary_2eproto[3]);
}

// ===================================================================

class Empty::_Internal {
 public:
};

Empty::Empty(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase(arena, is_message_owned) {
  // @@protoc_insertion_point(arena_constructor:Empty)
}
Empty::Empty(const Empty& from)
  : ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase() {
  Empty* const _this = this; (void)_this;
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:Empty)
}





const ::PROTOBUF_NAMESPACE_ID::Message::ClassData Empty::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::CopyImpl,
    ::PROTOBUF_NAMESPACE_ID::internal::ZeroFieldsBase::MergeImpl,
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*Empty::GetClassData() const { return &_class_data_; }







::PROTOBUF_NAMESPACE_ID::Metadata Empty::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_dictionary_2eproto_getter, &descriptor_table_dictionary_2eproto_once,
      file_level_metadata_dictionary_2eproto[4]);
}

// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::WordRequest*
Arena::CreateMaybeMessage< ::WordRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::WordRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::WordResponse*
Arena::CreateMaybeMessage< ::WordResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::WordResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::DictionaryResponse_DictionaryEntry_DoNotUse*
Arena::CreateMaybeMessage< ::DictionaryResponse_DictionaryEntry_DoNotUse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DictionaryResponse_DictionaryEntry_DoNotUse >(arena);
}
template<> PROTOBUF_NOINLINE ::DictionaryResponse*
Arena::CreateMaybeMessage< ::DictionaryResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::DictionaryResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::Empty*
Arena::CreateMaybeMessage< ::Empty >(Arena* arena) {
  return Arena::CreateMessageInternal< ::Empty >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
